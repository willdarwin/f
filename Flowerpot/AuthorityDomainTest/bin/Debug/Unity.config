<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">


  <!--Some tips-->
  <!--IExample`2[[],[]] is the syntax for 2 generic attributes IExample<A,B>-->
  <!--/Some tips-->


  <alias alias="TransparentProxy" type="Microsoft.Practices.Unity.InterceptionExtension.TransparentProxyInterceptor, Microsoft.Practices.Unity.Interception" />
  <alias alias="InterfaceInterceptor" type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception" />
  <!-- AOP stuff. Maybe needed when we start logging etc
      <alias alias="typeMatchingRule" type="Microsoft.Practices.Unity.InterceptionExtension.TypeMatchingRule, Microsoft.Practices.Unity.Interception" />
      -->

  <!-- Lifetime manager types -->
  <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
  <alias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />
  <!--Copied code from http://weblogs.asp.net/rashid/archive/2009/02/15/asp-net-mvc-unity-and-common-service-locator.aspx-->



  
  <!--Authority domain -->
  <alias alias="IAuthorityService" type="AuthorityDomain.ServiceLayer.IAuthorityService, AuthorityDomain.Services"/>
  <alias alias="AuthorityService" type="AuthorityDomain.DomainLayer.AuthorityService, AuthorityDomain.Services"/>
  <alias alias="IAuthorityRepository" type="AuthorityDomain.DomainLayer.RepositoryInterfaces.IAuthorityRepository,AuthorityDomain.Model"/>
  <alias alias="AuthorityRepository" type="AuthorityDomain.InfrastructureLayer.Repositories.AuthorityRepository, AuthorityDomain.Infrastructure"/>
  <!--Authority domain -->


  <container>
    <register type="IAuthorityRepository" mapTo="AuthorityRepository"></register>
    <register type="IAuthorityService" mapTo="AuthorityService"></register>
  </container>



</unity>
